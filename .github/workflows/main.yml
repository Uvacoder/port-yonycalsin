name: CI

on: push

jobs:
  install_dependencies:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.1.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.4
        with:
          node-version: 14.17.0

      - name: Cache node modules
        id: node-modules
        uses: actions/cache@v1.2.0
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node-modules-

      - if: steps.node-modules.outputs.cache-hit != 'true'
        run: npm install

      - run: tar -zcf node_modules.tar.gz node_modules

      - uses: actions/upload-artifact@v2
        with:
          name: node-modules
          path: node_modules.tar.gz
          retention-days: 1

  static_validation:
    runs-on: ubuntu-latest

    needs: [install_dependencies]

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2.1.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.4
        with:
          node-version: 14.17.0

      - uses: actions/download-artifact@v2
        with:
          name: node-modules

      - run: tar -zxf node_modules.tar.gz

      - name: Build
        run: npm run contentlayer:build

      - name: Typecheck
        run: npm run typecheck

      - name: Check Format
        run: npm run check:format

      - name: Lint
        run: npm run lint

  testing:
    timeout-minutes: 15

    runs-on: ubuntu-latest

    env:
      DATABASE_URL: 'mysql://githubci:githubci@127.0.0.1:3306/personal_website'
      SHADOW_DATABASE_URL: 'mysql://githubci:githubci@127.0.0.1:3306/personal_website'
      AUTH_JWT_SECRET: deamon

    strategy:
      fail-fast: false
      matrix:
        node-version: [14.17.0]

    needs: [install_dependencies]

    steps:
      - run: |
          docker run \
          --name mysql \
          -e MYSQL_ALLOW_EMPTY_PASSWORD=yes \
          -e MYSQL_DATABASE=personal_website \
          -e MYSQL_USER=githubci \
          -e MYSQL_PASSWORD=githubci \
          --health-cmd='mysqladmin ping' \
          --health-interval=10s \
          --health-timeout=5s \
          --health-retries=5 \
          -p 3306:3306 \
          -d mysql:8.0.13 \
          --sql-mode='' \
          --default-authentication-plugin='mysql_native_password' \

      - uses: actions/checkout@v2.1.1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1.4.4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/download-artifact@v2
        with:
          name: node-modules

      - run: tar -zxf node_modules.tar.gz

      - name: Wait for MySQL
        run: npx wait-on tcp:3306 && echo "MySQL is up"

      - name: Build
        run: npm run contentlayer:build

      - run: npm run test:ci
